#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>


#include <input/processors.dtsi>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    /*behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };*/

    behaviors {
        ht_pt: hold-tap_prefer-tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            display-name = "Gallium";
            bindings = <
&ht_pt INS ESC    &kp B       &kp L       &kp D           &kp C         &kp T                              &kp UP                &kp J        &kp Y         &kp O            &kp U         &kp COMMA    &kp EXCL
&ht_pt CAPS TAB   &mt LMETA N &mt LALT R  &mt LCTRL T     &mt LSHIFT S  &kp G                    &kp LEFT  &kp ENTER  &kp RIGHT  &kp P        &mt RSHIFT H  &mt RCTRL A      &mt RALT E    &mt RMETA I  &kp COLON
&caps_word        &kp X       &kp Q       &kp M           &kp W         &kp Z       &kp SPACE              &kp DOWN              &kp K        &kp F         &kp DQT          &kp SEMI      &kp DOT      &lt 3 QUESTION
                                    &rgb_ug RGB_EFF  &lt 1 SPACE &lt 2 DEL                                                   &lt 2 BSPC  &lt 1 ENTER  &rgb_ug RGB_TOG
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_1 {
            display-name = "Sym_Arr";
            bindings = <
&trans    &kp PERCENT           &kp AMPS          &kp PLUS          &kp BSLH         &kp GRAVE                                        &mmv MOVE_UP                       &kp RPAR           &kp LPAR           &kp UP           &kp LT           &kp GT     &none
&kp HASH  &mt LMETA CARET       &mt LALT DOLLAR   &mt LCTRL UNDER   &mt LSHIFT EQUAL &kp ASTRK                          &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &none            &kp LEFT         &kp DOWN           &kp RIGHT      &kp RMETA  &none
&trans    &kp AT                &kp PIPE          &kp MINUS         &kp FSLH         &kp TILDE  &kp C_MUTE                    &mmv MOVE_DOWN                             &kp RBKT         &kp LBKT         &kp SQT           &kp LBRC        &kp RBRC    &none
                                         &trans        &trans        &trans                                                                                                    &trans          &trans          &trans
            >;
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            display-name = "Fn_Num";
            bindings = <
&kp F1  &kp F2        &kp F3        &kp F4                                  &kp F5                      &kp PG_UP                           &mmv MOVE_UP                     &kp MINUS  &kp N7          &kp N8        &kp N9       &kp FSLH         &kp CARET
&kp F6  &mt LMETA F7  &mt LALT F8   &mt LCTRL F9                            &mt LSHIFT F10              &kp PG_DN            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp PLUS   &mt RSHIFT N4   &mt RCTRL N5  &mt RALT N6  &mt RMETA ASTRK  &kp EQUAL
&trans  &kp F11       &kp F12       &ht_pt LG(LS(PRINTSCREEN)) PRINTSCREEN  &ht_pt SCROLLLOCK HOME      &ht_pt END PAUSE_BREAK &kp C_MUTE       &mmv MOVE_DOWN                   &kp N0     &kp N1          &kp N2        &kp N3       &kp DOT          &kp UNDER
                                    &trans     &trans     &trans                                                            &trans    &trans     &trans
            >;
            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "OS";
            bindings = <
&studio_unlock   &trans           &trans            &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &trans                      &mmv MOVE_UP                             &kp C_STOP   &kp C_PREV            &kp UP       &kp C_NEXT       &sys_reset         &bootloader
&trans           &rgb_ug RGB_SAD  &rgb_ug RGB_SAI   &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &trans                &mmv MOVE_LEFT  &mkp LCLK   &mmv MOVE_RIGHT    &kp C_PP     &kp LEFT              &kp DOWN     &kp RIGHT        &ext_power EP_TOG  &bt BT_CLR
&trans           &trans           &trans            &rgb_ug RGB_SPD  &rgb_ug RGB_SPI  &trans    &kp C_MUTE         &mmv MOVE_DOWN                          &trans       &kp C_VOLUME_DOWN     &kp C_MUTE   &kp C_VOLUME_UP  &out OUT_TOG       &trans
                                &trans      &kp C_PWR      &bt BT_NXT                                                                                      &bt BT_PRV       &kp RG(RS(Q))     &trans

            >;
            sensor-bindings = <&scroll_encoder>;
        };
    };
};
